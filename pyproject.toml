[tool.poetry]
name = "fastapi-boilerplate"
version = "0.1.0"
description = ""
authors = ["mateosvilasboas <mateuscamposdantas@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.115.6"}
uvicorn = {extras = ["standard"], version = "^0.34.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
pydantic = "^2.10.3"
pydantic-settings = "^2.7.0"
alembic = "^1.14.0"
pyjwt = "^2.10.1"
psycopg = {extras = ["binary"], version = "^3.2.6"}
pwdlib = {extras = ["argon2"], version = "^0.2.1"}
dice = "^4.0.0"


[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.25.0"
pytest-cov = "^6.1.1"
pytest = "^8.3.5"
taskipy = "^1.14.1"
ruff = "^0.11.6"
aiosqlite = "^0.21.0"
testcontainers = "^4.10.0"
factory-boy = "^3.3.3"
freezegun = "^1.5.1"

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.ruff]
line-length = 79
extend-exclude = ['alembic']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'FAST']
ignore = ["E501"]

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev app/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage html'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]

[build-system]
requires = ["poetry-core==2.1.2"]
build-backend = "poetry.core.masonry.api"
